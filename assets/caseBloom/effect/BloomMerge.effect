
CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: fx-bloom-merge-vs:vert
      frag: fx-bloom-merge-fs:frag
}%

CCProgram fx-bloom-merge-vs %{
  precision highp float;
  #include <cc-global>
  #include <cc-local-batch>
  #include <input-standard>
  #include <cc-fog-vs>

  out vec2 v_uv;

  vec4 vert () {
    StandardVertInput In;
    CCVertInput(In);

    v_uv = a_texCoord;

    return In.position;
  }
}%

CCProgram fx-bloom-merge-fs %{
  precision highp float;
  #include <output>
  #include <cc-fog-fs>

  in vec2 v_uv;
  #pragma builtin(global)
  layout(set = 0, binding = 9) uniform sampler2D cc_gbuffer_emissiveMap;
  #pragma builtin(global)
  layout(set = 0, binding = 10) uniform sampler2D cc_lighting_resultMap;

  vec4 frag () {
    vec4 col = texture(cc_lighting_resultMap, v_uv);
    CC_APPLY_FOG(col);

    // col = vec4(1., 0., 0., 1.);
    return CCFragOutput(col);
    // return col;
  }
}%
